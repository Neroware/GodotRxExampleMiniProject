; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=5

_global_script_classes=[{
"base": "IterableBase",
"class": &"ArrayIterator",
"language": &"GDScript",
"path": "res://reactivex/internal/arrayiterator.gd"
}, {
"base": "RefCounted",
"class": &"ArraySet",
"language": &"GDScript",
"path": "res://reactivex/internal/set.gd"
}, {
"base": "Subject",
"class": &"AsyncSubject",
"language": &"GDScript",
"path": "res://reactivex/subject/asyncsubject.gd"
}, {
"base": "DamageCause",
"class": &"AttackArea",
"language": &"GDScript",
"path": "res://scripts/features/life/damage_cause/src_attack_area.gd"
}, {
"base": "ObserverBase",
"class": &"AutoDetachObserver",
"language": &"GDScript",
"path": "res://reactivex/observer/autodetachobserver.gd"
}, {
"base": "RefCounted",
"class": &"AutoDisposer",
"language": &"GDScript",
"path": "res://reactivex/disposable/autodisposer.gd"
}, {
"base": "Subject",
"class": &"BehaviorSubject",
"language": &"GDScript",
"path": "res://reactivex/subject/behaviorsubject.gd"
}, {
"base": "SensorBase",
"class": &"BodyEnteredSensor",
"language": &"GDScript",
"path": "res://scripts/features/sensor/src_body_entered_sensor.gd"
}, {
"base": "DisposableBase",
"class": &"BooleanDisposable",
"language": &"GDScript",
"path": "res://reactivex/disposable/booleandisposable.gd"
}, {
"base": "PeriodicScheduler",
"class": &"CatchScheduler",
"language": &"GDScript",
"path": "res://reactivex/scheduler/catchscheduler.gd"
}, {
"base": "RefCounted",
"class": &"Comparable",
"language": &"GDScript",
"path": "res://reactivex/abc/comparable.gd"
}, {
"base": "DisposableBase",
"class": &"CompositeDisposable",
"language": &"GDScript",
"path": "res://reactivex/disposable/compositedisposable.gd"
}, {
"base": "RefCounted",
"class": &"ConditionalVariable",
"language": &"GDScript",
"path": "res://reactivex/internal/conditionalvariable.gd"
}, {
"base": "Observable",
"class": &"ConnectableObservable",
"language": &"GDScript",
"path": "res://reactivex/observable/connectableobservable.gd"
}, {
"base": "TrampolineScheduler",
"class": &"CurrentThreadScheduler",
"language": &"GDScript",
"path": "res://reactivex/scheduler/currentthreadscheduler.gd"
}, {
"base": "Node",
"class": &"DamageCause",
"language": &"GDScript",
"path": "res://scripts/features/life/src_damage_cause.gd"
}, {
"base": "Node",
"class": &"DamageEffect",
"language": &"GDScript",
"path": "res://scripts/features/life/src_damage_effect.gd"
}, {
"base": "DisposableBase",
"class": &"Disposable",
"language": &"GDScript",
"path": "res://reactivex/disposable/disposable.gd"
}, {
"base": "RefCounted",
"class": &"DisposableBase",
"language": &"GDScript",
"path": "res://reactivex/abc/disposable.gd"
}, {
"base": "PeriodicScheduler",
"class": &"EventLoopScheduler",
"language": &"GDScript",
"path": "res://reactivex/scheduler/eventloopscheduler.gd"
}, {
"base": "RefCounted",
"class": &"ExceptionHandler",
"language": &"GDScript",
"path": "res://reactivex/exception/exceptionhandler.gd"
}, {
"base": "GodotSignalSchedulerBase",
"class": &"GodotSignalScheduler",
"language": &"GDScript",
"path": "res://reactivex/engine/scheduler/godotsignalscheduler.gd"
}, {
"base": "Scheduler",
"class": &"GodotSignalSchedulerBase",
"language": &"GDScript",
"path": "res://reactivex/engine/abc/godotsignalscheduler.gd"
}, {
"base": "Observable",
"class": &"GroupedObservable",
"language": &"GDScript",
"path": "res://reactivex/observable/groupedobservable.gd"
}, {
"base": "Scheduler",
"class": &"ImmediateScheduler",
"language": &"GDScript",
"path": "res://reactivex/scheduler/immediatescheduler.gd"
}, {
"base": "DisposableBase",
"class": &"InnerSubscription",
"language": &"GDScript",
"path": "res://reactivex/subject/innersubscription.gd"
}, {
"base": "RefCounted",
"class": &"InputActionManager",
"language": &"GDScript",
"path": "res://scripts/features/input_system/src_input_actions.gd"
}, {
"base": "RefCounted",
"class": &"IterableBase",
"language": &"GDScript",
"path": "res://reactivex/abc/iterable.gd"
}, {
"base": "IterableBase",
"class": &"Iterator",
"language": &"GDScript",
"path": "res://reactivex/internal/iterator.gd"
}, {
"base": "Node",
"class": &"Life",
"language": &"GDScript",
"path": "res://scripts/features/life/src_life.gd"
}, {
"base": "LockBase",
"class": &"Lock",
"language": &"GDScript",
"path": "res://reactivex/internal/lock.gd"
}, {
"base": "RefCounted",
"class": &"LockBase",
"language": &"GDScript",
"path": "res://reactivex/abc/lock.gd"
}, {
"base": "DisposableBase",
"class": &"MultipleAssignmentDisposable",
"language": &"GDScript",
"path": "res://reactivex/disposable/multiassignmentdisposable.gd"
}, {
"base": "PeriodicScheduler",
"class": &"NewThreadScheduler",
"language": &"GDScript",
"path": "res://reactivex/scheduler/newthreadscheduler.gd"
}, {
"base": "Comparable",
"class": &"Notification",
"language": &"GDScript",
"path": "res://reactivex/notification/notification.gd"
}, {
"base": "ObservableBase",
"class": &"Observable",
"language": &"GDScript",
"path": "res://reactivex/observable/observable.gd"
}, {
"base": "RefCounted",
"class": &"ObservableBase",
"language": &"GDScript",
"path": "res://reactivex/abc/observable.gd"
}, {
"base": "ScheduledObserver",
"class": &"ObserveOnObserver",
"language": &"GDScript",
"path": "res://reactivex/observer/observeonobserver.gd"
}, {
"base": "ObserverBase",
"class": &"Observer",
"language": &"GDScript",
"path": "res://reactivex/observer/observer.gd"
}, {
"base": "RefCounted",
"class": &"ObserverBase",
"language": &"GDScript",
"path": "res://reactivex/abc/observer.gd"
}, {
"base": "Notification",
"class": &"OnCompletedNotification",
"language": &"GDScript",
"path": "res://reactivex/notification/oncompleted.gd"
}, {
"base": "Notification",
"class": &"OnErrorNotification",
"language": &"GDScript",
"path": "res://reactivex/notification/onerror.gd"
}, {
"base": "Notification",
"class": &"OnNextNotification",
"language": &"GDScript",
"path": "res://reactivex/notification/onnext.gd"
}, {
"base": "PeriodicSchedulerBase",
"class": &"PeriodicScheduler",
"language": &"GDScript",
"path": "res://reactivex/scheduler/periodicscheduler.gd"
}, {
"base": "Scheduler",
"class": &"PeriodicSchedulerBase",
"language": &"GDScript",
"path": "res://reactivex/abc/periodicscheduler.gd"
}, {
"base": "CharacterBody2D",
"class": &"Player",
"language": &"GDScript",
"path": "res://scripts/features/player/src_player.gd"
}, {
"base": "RefCounted",
"class": &"PlayerAbilityManager",
"language": &"GDScript",
"path": "res://scripts/features/player/src_player_ability_manager.gd"
}, {
"base": "Node",
"class": &"PlayerComponent",
"language": &"GDScript",
"path": "res://scripts/features/player/src_player_component.gd"
}, {
"base": "PlayerComponent",
"class": &"PlayerHoverboardDash",
"language": &"GDScript",
"path": "res://scripts/features/player/abilities/src_hoverboard_dash.gd"
}, {
"base": "PlayerComponent",
"class": &"PlayerHoverboardMovement",
"language": &"GDScript",
"path": "res://scripts/features/player/movement/src_hoverboard_movement.gd"
}, {
"base": "RefCounted",
"class": &"PlayerManager",
"language": &"GDScript",
"path": "res://scripts/features/player/src_player_manager.gd"
}, {
"base": "PlayerComponent",
"class": &"PlayerSpriteBlurrEffect",
"language": &"GDScript",
"path": "res://scripts/features/player/visuals/src_player_sprite_blurr_effect.gd"
}, {
"base": "PlayerComponent",
"class": &"PlayerSpriteHoverboardSwordAttackAnimationController",
"language": &"GDScript",
"path": "res://scripts/features/player/animation/src_hoverboard_sword_attack_animation_controller.gd"
}, {
"base": "PlayerComponent",
"class": &"PlayerSpriteSwordAttackEffect",
"language": &"GDScript",
"path": "res://scripts/features/player/visuals/src_sword_attack_effect.gd"
}, {
"base": "PlayerComponent",
"class": &"PlayerSwordAttack",
"language": &"GDScript",
"path": "res://scripts/features/player/abilities/src_sword_attack.gd"
}, {
"base": "RefCounted",
"class": &"PriorityQueue",
"language": &"GDScript",
"path": "res://reactivex/internal/priorityqueue.gd"
}, {
"base": "LockBase",
"class": &"RLock",
"language": &"GDScript",
"path": "res://reactivex/internal/rlock.gd"
}, {
"base": "Observable",
"class": &"ReactiveProperty",
"language": &"GDScript",
"path": "res://reactivex/engine/observable/reactiveproperty/reactiveproperty.gd"
}, {
"base": "Observable",
"class": &"ReadOnlyReactiveProperty",
"language": &"GDScript",
"path": "res://reactivex/engine/observable/reactiveproperty/readonlyreactiveproperty.gd"
}, {
"base": "RefCounted",
"class": &"ReadWriteLock",
"language": &"GDScript",
"path": "res://reactivex/internal/rwlock.gd"
}, {
"base": "DisposableBase",
"class": &"RefCountDisposable",
"language": &"GDScript",
"path": "res://reactivex/disposable/refcountdisposable.gd"
}, {
"base": "RefCounted",
"class": &"RefValue",
"language": &"GDScript",
"path": "res://reactivex/internal/refvalue.gd"
}, {
"base": "Subject",
"class": &"ReplaySubject",
"language": &"GDScript",
"path": "res://reactivex/subject/replaysubject.gd"
}, {
"base": "PeriodicScheduler",
"class": &"SceneTreeTimeoutScheduler",
"language": &"GDScript",
"path": "res://reactivex/scheduler/scenetreetimeoutscheduler.gd"
}, {
"base": "DisposableBase",
"class": &"ScheduledDisposable",
"language": &"GDScript",
"path": "res://reactivex/disposable/scheduleddisposable.gd"
}, {
"base": "Comparable",
"class": &"ScheduledItem",
"language": &"GDScript",
"path": "res://reactivex/scheduler/scheduleditem.gd"
}, {
"base": "Observer",
"class": &"ScheduledObserver",
"language": &"GDScript",
"path": "res://reactivex/observer/scheduledobserver.gd"
}, {
"base": "SchedulerBase",
"class": &"Scheduler",
"language": &"GDScript",
"path": "res://reactivex/scheduler/scheduler.gd"
}, {
"base": "RefCounted",
"class": &"SchedulerBase",
"language": &"GDScript",
"path": "res://reactivex/abc/scheduler.gd"
}, {
"base": "Node",
"class": &"SensorBase",
"language": &"GDScript",
"path": "res://scripts/features/sensor/src_sensor.gd"
}, {
"base": "DisposableBase",
"class": &"SerialDisposable",
"language": &"GDScript",
"path": "res://reactivex/disposable/serialdisposable.gd"
}, {
"base": "DisposableBase",
"class": &"SingleAssignmentDisposable",
"language": &"GDScript",
"path": "res://reactivex/disposable/singleassignmentdisposable.gd"
}, {
"base": "Node2D",
"class": &"Spawner",
"language": &"GDScript",
"path": "res://scenes/features/enemies/src_enemy_spawner.gd"
}, {
"base": "RefCounted",
"class": &"StartableBase",
"language": &"GDScript",
"path": "res://reactivex/abc/startable.gd"
}, {
"base": "RefCounted",
"class": &"StreamItem",
"language": &"GDScript",
"path": "res://reactivex/item/streamitem.gd"
}, {
"base": "SubjectBase",
"class": &"Subject",
"language": &"GDScript",
"path": "res://reactivex/subject/subject.gd"
}, {
"base": "RefCounted",
"class": &"SubjectBase",
"language": &"GDScript",
"path": "res://reactivex/abc/subject.gd"
}, {
"base": "PeriodicScheduler",
"class": &"ThreadedTimeoutScheduler",
"language": &"GDScript",
"path": "res://reactivex/scheduler/threadedtimeoutscheduler.gd"
}, {
"base": "RefCounted",
"class": &"ThreadingEvent",
"language": &"GDScript",
"path": "res://reactivex/internal/threadingevent.gd"
}, {
"base": "RefCounted",
"class": &"ThrowableBase",
"language": &"GDScript",
"path": "res://reactivex/abc/throwable.gd"
}, {
"base": "PeriodicScheduler",
"class": &"TimeoutScheduler",
"language": &"GDScript",
"path": "res://reactivex/scheduler/timeoutscheduler.gd"
}, {
"base": "RefCounted",
"class": &"Trampoline",
"language": &"GDScript",
"path": "res://reactivex/scheduler/trampoline.gd"
}, {
"base": "Scheduler",
"class": &"TrampolineScheduler",
"language": &"GDScript",
"path": "res://reactivex/scheduler/trampolinescheduler.gd"
}, {
"base": "RefCounted",
"class": &"TryCatch",
"language": &"GDScript",
"path": "res://reactivex/exception/trycatch.gd"
}, {
"base": "Comparable",
"class": &"Tuple",
"language": &"GDScript",
"path": "res://reactivex/internal/tuple.gd"
}, {
"base": "PeriodicScheduler",
"class": &"VirtualTimeScheduler",
"language": &"GDScript",
"path": "res://reactivex/scheduler/virtualtimescheduler.gd"
}, {
"base": "RefCounted",
"class": &"WeakKeyDictionary",
"language": &"GDScript",
"path": "res://reactivex/internal/weakkeydictionary.gd"
}, {
"base": "RefCounted",
"class": &"__GDRx_Engine__",
"language": &"GDScript",
"path": "res://reactivex/engine/__gdrxengine__.gd"
}, {
"base": "RefCounted",
"class": &"__GDRx_Init__",
"language": &"GDScript",
"path": "res://reactivex/__gdrxinit__.gd"
}, {
"base": "RefCounted",
"class": &"__GDRx_Obs__",
"language": &"GDScript",
"path": "res://reactivex/__gdrxobs__.gd"
}, {
"base": "RefCounted",
"class": &"__GDRx_Op__",
"language": &"GDScript",
"path": "res://reactivex/__gdrxop__.gd"
}, {
"base": "Node",
"class": &"__GDRx_Singleton__",
"language": &"GDScript",
"path": "res://reactivex/__gdrxsingleton__.gd"
}]
_global_script_class_icons={
"ArrayIterator": "",
"ArraySet": "",
"AsyncSubject": "",
"AttackArea": "",
"AutoDetachObserver": "",
"AutoDisposer": "",
"BehaviorSubject": "",
"BodyEnteredSensor": "",
"BooleanDisposable": "",
"CatchScheduler": "",
"Comparable": "",
"CompositeDisposable": "",
"ConditionalVariable": "",
"ConnectableObservable": "",
"CurrentThreadScheduler": "",
"DamageCause": "",
"DamageEffect": "",
"Disposable": "",
"DisposableBase": "",
"EventLoopScheduler": "",
"ExceptionHandler": "",
"GodotSignalScheduler": "",
"GodotSignalSchedulerBase": "",
"GroupedObservable": "",
"ImmediateScheduler": "",
"InnerSubscription": "",
"InputActionManager": "",
"IterableBase": "",
"Iterator": "",
"Life": "",
"Lock": "",
"LockBase": "",
"MultipleAssignmentDisposable": "",
"NewThreadScheduler": "",
"Notification": "",
"Observable": "",
"ObservableBase": "",
"ObserveOnObserver": "",
"Observer": "",
"ObserverBase": "",
"OnCompletedNotification": "",
"OnErrorNotification": "",
"OnNextNotification": "",
"PeriodicScheduler": "",
"PeriodicSchedulerBase": "",
"Player": "",
"PlayerAbilityManager": "",
"PlayerComponent": "",
"PlayerHoverboardDash": "",
"PlayerHoverboardMovement": "",
"PlayerManager": "",
"PlayerSpriteBlurrEffect": "",
"PlayerSpriteHoverboardSwordAttackAnimationController": "",
"PlayerSpriteSwordAttackEffect": "",
"PlayerSwordAttack": "",
"PriorityQueue": "",
"RLock": "",
"ReactiveProperty": "",
"ReadOnlyReactiveProperty": "",
"ReadWriteLock": "",
"RefCountDisposable": "",
"RefValue": "",
"ReplaySubject": "",
"SceneTreeTimeoutScheduler": "",
"ScheduledDisposable": "",
"ScheduledItem": "",
"ScheduledObserver": "",
"Scheduler": "",
"SchedulerBase": "",
"SensorBase": "",
"SerialDisposable": "",
"SingleAssignmentDisposable": "",
"Spawner": "",
"StartableBase": "",
"StreamItem": "",
"Subject": "",
"SubjectBase": "",
"ThreadedTimeoutScheduler": "",
"ThreadingEvent": "",
"ThrowableBase": "",
"TimeoutScheduler": "",
"Trampoline": "",
"TrampolineScheduler": "",
"TryCatch": "",
"Tuple": "",
"VirtualTimeScheduler": "",
"WeakKeyDictionary": "",
"__GDRx_Engine__": "",
"__GDRx_Init__": "",
"__GDRx_Obs__": "",
"__GDRx_Op__": "",
"__GDRx_Singleton__": ""
}

[application]

config/name="spacegirl"
run/main_scene="res://scenes/scn_test_level.tscn"
config/features=PackedStringArray("4.0", "Forward Plus")
config/icon="res://icon.svg"

[autoload]

GDRx="*res://reactivex/__gdrxsingleton__.gd"
Globals="*res://scripts/src_globals.gd"

[display]

window/size/viewport_width=320
window/size/viewport_height=225
mouse_cursor/custom_image="res://assets/textures/placeholder/cursor/tex_crosshair4.png"
window/stretch/mode="viewport"

[input]

Up={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":87,"unicode":0,"echo":false,"script":null)
]
}
Down={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":83,"unicode":0,"echo":false,"script":null)
]
}
Left={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":65,"unicode":97,"echo":false,"script":null)
]
}
Right={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":68,"unicode":0,"echo":false,"script":null)
]
}
Action0={
"deadzone": 0.5,
"events": [Object(InputEventMouseButton,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"button_mask":0,"position":Vector2(0, 0),"global_position":Vector2(0, 0),"factor":1.0,"button_index":1,"pressed":false,"double_click":false,"script":null)
]
}
Action1={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":32,"unicode":0,"echo":false,"script":null)
]
}

[layer_names]

2d_physics/layer_1="Environment"
2d_physics/layer_2="Player"
2d_physics/layer_3="Foes"

[rendering]

textures/canvas_textures/default_texture_filter=0
